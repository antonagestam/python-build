on:
  workflow_call:
    secrets:
      pypi_api_token:
        required: true
    inputs:
      requirements_file:
        type: "string"
        required: false
        default: "setup.cfg"

jobs:
  build-and-publish:
    name: Build and publish
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
    - name: pip cache
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles(inputs.requirements_file) }}
        restore-keys: ${{ runner.os }}-pip
    - name: Install dependencies
      run: python3 -m pip install --upgrade build
    - name: Build
      run: python3 -m build --sdist --wheel .
    - name: Verify release version
      run: |
        pkg_info_version=$(
        python3 <(cat << EOF
        from pathlib import Path
        from pkginfo import Wheel
        wheel = Wheel(next(Path("dist").glob("*.whl")))
        print(wheel.version)
        EOF
        )
        )
        if [[ "$pkg_info_version" != "${{ github.event.release.tag_name }}" ]]; then
          echo "ðŸ’¥ The version of the built wheel doesn't match the release tag."
          echo
          echo "Release tag: '${{ github.event.release.tag_name }}'"
          echo "Packaged version: '$pkg_info_version'"
          exit 1
        fi
    - name: Publish
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.pypi_api_token }}
